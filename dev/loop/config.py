# -----------------------------------------
# THIS FILE WAS AUTOGENERATED! DO NOT EDIT!
# -----------------------------------------
# file to edit: 00b_config.ipynb

from pathlib import Path
from multiprocessing import cpu_count

import torch
from torch.nn import functional as F

from loop.annotations import Loss


class Config:

    @property
    def batch_size(self) -> int: return 4

    @property
    def bs(self) -> int: return self.batch_size

    @property
    def cpu(self) -> torch.device: return torch.device('cpu')

    @property
    def gpu_index(self) -> int: return 0

    @property
    def gpu(self) -> torch.device: return torch.device(f'cuda:{self.gpu_index}')

    @property
    def device(self) -> torch.device: return self.gpu

    @property
    def datasets(self) -> Path: return Path.home()/'data'

    @property
    def loss_function(self) -> Loss: return F.nll_loss

    @property
    def loss_fn(self) -> Loss: return self.loss_function

    @property
    def num_workers(self) -> int: return cpu_count()

    @property
    def n_jobs(self) -> int: return self.num_workers


defaults = Config()
